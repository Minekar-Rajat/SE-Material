//============================================================================
// Name        : Assignment_2_opoverloading.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;

class complex
{
	int real,img;

public :

	complex()
		{
			real=0;
			img=0;
		}

	complex(int r,int i)
	{
		real=r;
		img=i;
	}

	complex operator+(complex obj)
	{
		complex temp;
		temp.real=this->real+obj.real;
		temp.img=this->img+obj.img;

		return temp;

	}
	complex operator-(complex obj)
		{
			complex temp;
			temp.real=this->real-obj.real;
			temp.img=this->img-obj.img;

			return temp;

		}

	complex operator*(complex obj)
	{
		complex temp;
		temp.real=(this->real*obj.real)-(this->img*obj.img);
		temp.img=(this->img*obj.real)+(this->real*obj.img);
		return temp;

	}
	complex operator/(complex obj)
		{
			complex temp;
			int var;
			var=(obj.real*obj.real)+(obj.img*obj.img);
			temp.real=((this->real*obj.real)+(this->img*obj.img))/var;
			temp.img=((this->img*obj.real)-(this->real*obj.img))/var;
			return temp;

		}





	void display()
	{
		cout<<"\n";
		if(this->img<0)
		{
			cout<<"\n\tComplex no is : "<<this->real<<this->img<<"i";

		}
		if(this->img>0)
		{
			cout<<"\n\tComplex no is : "<<this->real<<"+"<<this->img<<"i";
		}
	}



};



int main()
{
	complex c1(5,3);
	complex c2(8,10);
	complex c3(0,0);
	c3=c1+c2;
	cout<<"\n\t";

	c1.display();
	c2.display();
	c3.display();





	return 0;
}

